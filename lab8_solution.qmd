---
title: "Untitled"
format: html
editor: visual
---

## Quarto

```{r}
library(tidyverse)
patients <- read_tsv("patient-data-cleaned.txt")
patients
print(glimpse(patients))
```

1.  Narysuj wykres punktowy wagi pacjenta w funkcji BMI (w estetyce globalnej) i pokoloruj punkty w oparciu o wzrost (w estetyce lokalnej).

```{r}
plot <- ggplot(data = patients, mapping = aes(x=BMI, y=Weight, colour = Height)) + geom_point() + scale_color_gradient2(low='green', high = 'red', mid='orange', midpoint = mean(patients$Height))
print(plot)
```

1.  Za pomocą dodatkowego geoma dopasuj gładką linię określającą trend.

```{r}
plot <- ggplot(data = patients, mapping = aes(x=BMI, y=Weight, colour = Height)) + geom_point() + scale_color_gradient2(low='green', high = 'red', mid='orange', midpoint = mean(patients$Height)) + stat_smooth(method='lm',se=F )
print(plot)
```

1.  Czy dopasowanie z poprzedniego wykresu wygląda dobrze? Spójrz na stronę pomocy dla `geom_smooth` i dostosuj metodę tak, aby pasowała do linii prostej i nie rysowała przedziału ufności

```{r}
plot <- ggplot(data = patients, mapping = aes(x=BMI, y=Weight, colour = Height)) + geom_point() + scale_color_gradient2(low='green', high = 'red', mid='orange', midpoint = mean(patients$Height)) + geom_smooth(se=FALSE)
print(plot)
```

1.  Wygeneruj wykres pudełkowy zmiennej Score porównując palaczy i niepalących

```{r}
plot <- ggplot(data = patients, aes(Smokes,Score)) + geom_boxplot()  
print(plot)
```

1.  Za pomocą kolorów rozdziel wykresy pudełkowe dodatkowo ze względu na płeć.

```{r}
plot <- ggplot(data = patients, aes(Smokes,Score, colour=Sex)) + geom_boxplot()  
print(plot)
```

1.  Wygeneruj histogram BMI kolorując każdy słupek na niebiesko. Dobierz odpowiednią szerokość przedziałów (binów). Swój wybór uzasadnij.

```{r}
plot <- ggplot(data = patients, aes(x = BMI)) +
  geom_histogram(binwidth = 0.5, colour = "black", fill = 'blue') 
print(plot)
```

Wybrałem przedział binów na poziomie 0.5 ze względu na zakres BMI. BMI zmienia się od 20 do 30 więc znaczące zmienay są co około 0.5 jednostki.

1.  Zamiast histogramu wygeneruj wykres estymatora jądrowego.

```{r}
plot1 <- ggplot(patients, aes(BMI)) + geom_density()
print(plot1)
```

1.  Porównaj histogram z estymatorem jądrowym na jednym wykresie. Ustaw przeźroczystość histogramu (alpha) na 20%. Dlaczego wysokości wykresów są różne? Ustaw estetykę globalną wykresu tak, aby ujednolicić pionową oś (*wskazówka: użyj funkcji `after_stat()` z odpowiednim argumentem*)

```{r}
plot1 <- ggplot(patients, aes(BMI)) + geom_histogram(aes(y = after_stat(density)), colour = "black", fill = 'blue') + geom_density(alpha=0.2) 
print(plot1)
```

Wynika to z tego że wykres estymatora jądrowego jest tworzony na podstawie uśrednionego lokalnego otoczenia

1.  Wygeneruj wykresy estymatorów jądrowych BMI pokolorowane ze względu na płeć (kolor wypełnienia). Dobierz odpowiednią przeźroczystość.

```{r}
plot1 <- ggplot(patients, aes(BMI, fill=Sex, colour = Sex)) + geom_density(alpha = 0.2 )
print(plot1)
```

1.  Narysuj wykres punktowy wagi pacjenta w funkcji BMI i pokoloruj punkty w oparciu o wzrost. Podziel go na siatkę wykresów (kafelki) w oparciu o płeć i palenie papierosów.

```{r}
plot <- ggplot(data= patients, aes(x = Weight, y = BMI, colour = Height)) + geom_point() + scale_color_gradient2(low='green', high = 'red', mid='orange', midpoint = mean(patients$Height)) + facet_grid(vars(Sex),vars(Smokes))
print(plot)
```

1.  Wygeneruj wykres pudełkowy BMI porównując palących i niepalących, pokolorowanych ze względu na płeć i dodaj osobny kafelek ze względu na wiek.

```{r}
plot <- ggplot(data = patients, aes(x = Smokes, y = BMI, fill = Sex)) +
  geom_boxplot() + stat_smooth(method = "lm", se = FALSE)+
  labs(x = "Weight", y = "BMI") +
  facet_grid(~year(Birth)) 
# Wyświetlenie wykresu
print(plot)
```

1.  Utwórz podobny boxplot BMI, ale tym razem pogrupuj dane ze względu na płeć, pokoloruj ze względu na wiek (*wskazówka:przekształć kolor do zmiennej kategorycznej*) a kafelki ze względu na to kto jest osobą palącą.

```{r}
patients$Age <- factor(patients$Age)
plot <- ggplot(data = patients, mapping = aes(x = Sex, y = BMI, fill = Age)) +
  geom_boxplot() + facet_grid(Smokes~.)

# Wyświetlenie wykresu
print(plot)
```

1.  Narysuj wykres punktowy wagi pacjenta w funkcji BMI.

```{r}
plot <- ggplot(data = patients, aes(x = Weight,y = BMI)) + geom_boxplot() 
print(plot)
```

1.  Zaczynając od poprzedniego wykresu dostosuj oś BMI tak aby zaznaczone byly tylko wartości 20, 30, 40 a na osi wagi wartości od 60 do 100 ze skokiem 5. Dodaj polską nazwę zmiennej i jednostkę (kg).

```{r}
plot <- ggplot(data = patients, aes(x = Weight,y = BMI)) + geom_boxplot() + scale_y_continuous("BMI", breaks = seq(20, 40, by=10), limits = c(20,40))+ scale_x_continuous("Waga [kg]", breaks = seq(60, 100, by=5), limits = c(60,100))
print(plot)
```

1.  Narysuj wykres punktowy wagi pacjenta w funkcji BMI. Pokoloruj go w skali kolorowej ze względu na wzrost. Utwórz skalę kolorystyczną z punktem środkowym odpowiadającym średniemu wzrostowi pacjenta zaś ekstremami skali mają być zielony (minimum) i czerwony (maksimum) w odcieniach zgodnych z kolorami AGH. Jako środkowy kolor przyjąć szarość `grey`

```{r}
plot <- ggplot(data = patients, mapping = aes(x=BMI, y=Weight, colour = Height)) + geom_point() + scale_color_gradient2(low='green', high = 'red', mid='grey', midpoint = mean(patients$Height))
print(plot)
```

1.  Narysuj wykres punktowy wagi pacjenta w funkcji BMI. Pokoloruj go w skali kolorowej ze względu na wzrost. Dodaj do niego linie trendu bez przedziałów ufności dla każdej z grup wiekowych

```{r}
plot <- ggplot(data=patients, aes(x=Weight, y=BMI, colour=Height, group = factor(year(Birth)))) + geom_point() + stat_smooth(method="lm",se=F)
print(plot)
```

1.  Usuń tytuł legendy. Zmień kolory tła pozycji legendy (key) na biało i umieść legendę pod wykresem.

```{r}
plot <- ggplot(data=patients, aes(x=Weight, y=BMI, colour=Height, group = factor(year(Birth)))) + geom_point() + stat_smooth(method="lm",se=F) + labs(colour = NULL) +
  theme(panel.background = element_rect(fill = "white"), legend.position = "bottom")
print(plot)
```

1.  Dodaj odpowiedni tytuł do wykresu. Usuń pomniejsze linie siatki. Zapisz jako plik png o wymiarach 16 na 16 cm.

```{r}
plot <- ggplot(data=patients, aes(x=Weight, y=BMI, colour=Height, group = factor(year(Birth)))) + geom_point() + stat_smooth(method="lm",se=F) + labs(colour = NULL) +theme(panel.background = element_rect(fill = "white"), legend.position = "bottom") + labs(title = "wykres")
ggsave("wykres.png", plot, width = 16, height = 16, units = "in")
print(plot)
```

```         
```
